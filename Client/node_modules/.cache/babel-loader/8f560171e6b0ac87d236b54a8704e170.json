{"ast":null,"code":"var _jsxFileName = \"D:\\\\AREACTPROJECTS@IMPORTANT\\\\Frozen\\\\MERL(NewSite)\\\\Client\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Grid from \"@mui/material/Grid\";\nimport { Post } from \"../components/Post\";\nimport { TagsBlock } from \"../components/TagsBlock\";\nimport { CommentsBlock } from \"../components/CommentsBlock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\nimport dateConverter from \"../utils/dateConverter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [tabs, setTabs] = useState(1); //pull out posts and tags from postReducer\n\n  const {\n    posts,\n    tags\n  } = useSelector(state => state.post); //pulling out the status for checking if posts are loaded\n\n  const isPostsLoading = posts.status === \"loading\";\n  const isTagsLoading = tags.status === \"loading\";\n  const userData = useSelector(state => state.auth.data);\n  React.useEffect(() => {\n    try {\n      //calling two requests for getting a posts and tags\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\n      dispatch(fetchPosts());\n      dispatch(fetchTags());\n    } catch (error) {\n      console.log(\"failure to get posts\", error);\n    }\n  }, []);\n  const popular = Array.isArray(posts === null || posts === void 0 ? void 0 : posts.items) ? [...posts.items].sort(function (a, b) {\n    if (a.views > b.views) return -1;\n    return 0;\n  }) : [];\n\n  const handleChangeTabs = (e, newValue) => {\n    setTabs(newValue);\n  };\n\n  function TabNew() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 8,\n      item: true,\n      children: (isPostsLoading ? [...Array(5)] : posts.items).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n        isLoading: isPostsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Post, {\n        id: item._id,\n        title: item.title,\n        imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n        user: item.user,\n        createdAt: dateConverter(item.createdAt),\n        viewsCount: item.views,\n        commentsCount: 3,\n        tags: item.tags //comparing post-userId and userId-from-store\n        ,\n        isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  function TabPopular() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 8,\n      item: true,\n      children: (isPostsLoading ? [...Array(5)] : popular).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n        isLoading: isPostsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Post, {\n        id: item._id,\n        title: item.title,\n        imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n        user: item.user,\n        createdAt: dateConverter(item.createdAt),\n        viewsCount: item.views,\n        commentsCount: 3,\n        tags: item.tags //comparing post-userId and userId-from-store\n        ,\n        isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: tabs,\n      onChange: handleChangeTabs,\n      style: {\n        marginBottom: 15\n      },\n      \"aria-label\": \"basic tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"New\",\n        value: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Popular\",\n        value: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabNew, {\n      value: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPopular, {\n      value: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 4,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(TagsBlock, {\n          items: tags.items,\n          isLoading: isTagsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentsBlock, {\n          items: [{\n            user: {\n              fullName: \"Вася Пупкин\",\n              avatarUrl: \"https://mui.com/static/images/avatar/1.jpg\"\n            },\n            text: \"Это тестовый комментарий\"\n          }, {\n            user: {\n              fullName: \"Иван Иванов\",\n              avatarUrl: \"https://mui.com/static/images/avatar/2.jpg\"\n            },\n            text: \"When displaying three lines or more, the avatar is not aligned at the top. You should set the prop to align the avatar at the top\"\n          }],\n          isLoading: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"a/2StkUx39o0HfVw8etD6oI7idA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Tabs","Tab","Grid","Post","TagsBlock","CommentsBlock","useDispatch","useSelector","fetchPosts","fetchTags","dateConverter","Home","dispatch","tabs","setTabs","posts","tags","state","post","isPostsLoading","status","isTagsLoading","userData","auth","data","useEffect","error","console","log","popular","Array","isArray","items","sort","a","b","views","handleChangeTabs","e","newValue","TabNew","map","item","_id","title","image","user","createdAt","Boolean","TabPopular","marginBottom","fullName","avatarUrl","text"],"sources":["D:/AREACTPROJECTS@IMPORTANT/Frozen/MERL(NewSite)/Client/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Post } from \"../components/Post\";\r\nimport { TagsBlock } from \"../components/TagsBlock\";\r\nimport { CommentsBlock } from \"../components/CommentsBlock\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\r\nimport dateConverter from \"../utils/dateConverter\";\r\nexport const Home = () => {\r\n  const dispatch = useDispatch();\r\n  const [tabs, setTabs] = useState(1);\r\n  //pull out posts and tags from postReducer\r\n  const { posts, tags } = useSelector((state) => state.post);\r\n  //pulling out the status for checking if posts are loaded\r\n  const isPostsLoading = posts.status === \"loading\";\r\n  const isTagsLoading = tags.status === \"loading\";\r\n\r\n  const userData = useSelector((state) => state.auth.data);\r\n  React.useEffect(() => {\r\n    try {\r\n      //calling two requests for getting a posts and tags\r\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\r\n      dispatch(fetchPosts());\r\n      dispatch(fetchTags());\r\n    } catch (error) {\r\n      console.log(\"failure to get posts\", error);\r\n    }\r\n  }, []);\r\n\r\n  const popular = Array.isArray(posts?.items)\r\n    ? [...posts.items].sort(function (a, b) {\r\n        if (a.views > b.views) return -1;\r\n        return 0;\r\n      })\r\n    : [];\r\n  const handleChangeTabs = (e, newValue) => {\r\n    setTabs(newValue);\r\n  };\r\n  function TabNew() {\r\n    return (\r\n      <Grid xs={8} item>\r\n        {(isPostsLoading ? [...Array(5)] : posts.items).map((item) =>\r\n          isPostsLoading ? (\r\n            <Post isLoading={isPostsLoading} />\r\n          ) : (\r\n            <Post\r\n              id={item._id}\r\n              title={item.title}\r\n              imageUrl={item.image ? `http://localhost:4420${item.image}` : \"\"}\r\n              user={item.user}\r\n              createdAt={dateConverter(item.createdAt)}\r\n              viewsCount={item.views}\r\n              commentsCount={3}\r\n              tags={item.tags}\r\n              //comparing post-userId and userId-from-store\r\n              isEditable={Boolean(item.user._id === userData?._id)}\r\n            />\r\n          )\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n  function TabPopular() {\r\n    return (\r\n      <Grid xs={8} item>\r\n        {(isPostsLoading ? [...Array(5)] : popular).map((item) =>\r\n          isPostsLoading ? (\r\n            <Post isLoading={isPostsLoading} />\r\n          ) : (\r\n            <Post\r\n              id={item._id}\r\n              title={item.title}\r\n              imageUrl={item.image ? `http://localhost:4420${item.image}` : \"\"}\r\n              user={item.user}\r\n              createdAt={dateConverter(item.createdAt)}\r\n              viewsCount={item.views}\r\n              commentsCount={3}\r\n              tags={item.tags}\r\n              //comparing post-userId and userId-from-store\r\n              isEditable={Boolean(item.user._id === userData?._id)}\r\n            />\r\n          )\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Tabs\r\n        value={tabs}\r\n        onChange={handleChangeTabs}\r\n        style={{ marginBottom: 15 }}\r\n        aria-label=\"basic tabs example\"\r\n      >\r\n        <Tab label=\"New\" value={0} />\r\n        <Tab label=\"Popular\" value={1} />\r\n      </Tabs>\r\n      <TabNew value={0} />\r\n      <TabPopular value={1} />\r\n      <Grid container spacing={4}>\r\n        <Grid xs={4} item>\r\n          <TagsBlock items={tags.items} isLoading={isTagsLoading} />\r\n          <CommentsBlock\r\n            items={[\r\n              {\r\n                user: {\r\n                  fullName: \"Вася Пупкин\",\r\n                  avatarUrl: \"https://mui.com/static/images/avatar/1.jpg\",\r\n                },\r\n                text: \"Это тестовый комментарий\",\r\n              },\r\n              {\r\n                user: {\r\n                  fullName: \"Иван Иванов\",\r\n                  avatarUrl: \"https://mui.com/static/images/avatar/2.jpg\",\r\n                },\r\n                text: \"When displaying three lines or more, the avatar is not aligned at the top. You should set the prop to align the avatar at the top\",\r\n              },\r\n            ]}\r\n            isLoading={false}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}