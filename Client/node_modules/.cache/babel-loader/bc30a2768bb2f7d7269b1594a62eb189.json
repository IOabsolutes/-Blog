{"ast":null,"code":"var _jsxFileName = \"D:\\\\AREACTPROJECTS@IMPORTANT\\\\Frozen\\\\MERL(NewSite)\\\\Client\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Grid from \"@mui/material/Grid\";\nimport { Post } from \"../components/Post\";\nimport { TagsBlock } from \"../components/TagsBlock\";\nimport { CommentsBlock } from \"../components/CommentsBlock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\nimport dateConverter from \"../utils/dateConverter\";\nimport TabPanel from \"@mui/lab/TabPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const dispatch = useDispatch(); //pull out posts and tags from postReducer\n\n  const {\n    posts,\n    tags\n  } = useSelector(state => state.post); //pulling out the status for checking if posts are loaded\n\n  const isPostsLoading = posts.status === \"loading\";\n  const isTagsLoading = tags.status === \"loading\";\n  const userData = useSelector(state => state.auth.data);\n  React.useEffect(() => {\n    try {\n      //calling two requests for getting a posts and tags\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\n      dispatch(fetchPosts());\n      dispatch(fetchTags());\n    } catch (error) {\n      console.log(\"failure to get posts\", error);\n    }\n  }, []);\n  const popular = Array.isArray(posts === null || posts === void 0 ? void 0 : posts.items) ? [...posts.items].sort(function (a, b) {\n    if (a.views > b.views) return -1;\n    return 0;\n  }) : [...Array(5)];\n\n  function applo() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hoeel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  function sdfsdfs() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"34242342dsads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      style: {\n        marginBottom: 15\n      },\n      value: 0,\n      \"aria-label\": \"basic tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"New\",\n        value: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Popular\",\n        value: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"1\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          xs: 8,\n          item: true,\n          children: (isPostsLoading ? [...Array(5)] : posts.items).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n            isLoading: isPostsLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Post, {\n            id: item._id,\n            title: item.title,\n            imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n            user: item.user,\n            createdAt: dateConverter(item.createdAt),\n            viewsCount: item.views,\n            commentsCount: 3,\n            tags: item.tags //comparing post-userId and userId-from-store\n            ,\n            isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: \"2\",\n        children: (isPostsLoading ? [...Array(5)] : popular).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n          isLoading: isPostsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Post, {\n          id: item._id,\n          title: item.title,\n          imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n          user: item.user,\n          createdAt: dateConverter(item.createdAt),\n          viewsCount: item.views,\n          commentsCount: 3,\n          tags: item.tags //comparing post-userId and userId-from-store\n          ,\n          isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 4,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(TagsBlock, {\n          items: tags.items,\n          isLoading: isTagsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentsBlock, {\n          items: [{\n            user: {\n              fullName: \"Вася Пупкин\",\n              avatarUrl: \"https://mui.com/static/images/avatar/1.jpg\"\n            },\n            text: \"Это тестовый комментарий\"\n          }, {\n            user: {\n              fullName: \"Иван Иванов\",\n              avatarUrl: \"https://mui.com/static/images/avatar/2.jpg\"\n            },\n            text: \"When displaying three lines or more, the avatar is not aligned at the top. You should set the prop to align the avatar at the top\"\n          }],\n          isLoading: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"IY4mf+v3bmViJnJUTpbIorUEJQc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Tabs","Tab","Grid","Post","TagsBlock","CommentsBlock","useDispatch","useSelector","fetchPosts","fetchTags","dateConverter","TabPanel","Home","dispatch","posts","tags","state","post","isPostsLoading","status","isTagsLoading","userData","auth","data","useEffect","error","console","log","popular","Array","isArray","items","sort","a","b","views","applo","sdfsdfs","marginBottom","map","item","_id","title","image","user","createdAt","Boolean","fullName","avatarUrl","text"],"sources":["D:/AREACTPROJECTS@IMPORTANT/Frozen/MERL(NewSite)/Client/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Post } from \"../components/Post\";\r\nimport { TagsBlock } from \"../components/TagsBlock\";\r\nimport { CommentsBlock } from \"../components/CommentsBlock\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\r\nimport dateConverter from \"../utils/dateConverter\";\r\nimport TabPanel from \"@mui/lab/TabPanel\";\r\nexport const Home = () => {\r\n  const dispatch = useDispatch();\r\n  //pull out posts and tags from postReducer\r\n  const { posts, tags } = useSelector((state) => state.post);\r\n  //pulling out the status for checking if posts are loaded\r\n  const isPostsLoading = posts.status === \"loading\";\r\n  const isTagsLoading = tags.status === \"loading\";\r\n\r\n  const userData = useSelector((state) => state.auth.data);\r\n  React.useEffect(() => {\r\n    try {\r\n      //calling two requests for getting a posts and tags\r\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\r\n      dispatch(fetchPosts());\r\n      dispatch(fetchTags());\r\n    } catch (error) {\r\n      console.log(\"failure to get posts\", error);\r\n    }\r\n  }, []);\r\n\r\n  const popular = Array.isArray(posts?.items)\r\n    ? [...posts.items].sort(function (a, b) {\r\n        if (a.views > b.views) return -1;\r\n        return 0;\r\n      })\r\n    : [...Array(5)];\r\n  function applo() {\r\n    return <h1>hoeel</h1>;\r\n  }\r\n  function sdfsdfs() {\r\n    return <h1>34242342dsads</h1>;\r\n  }\r\n  return (\r\n    <>\r\n      <Tabs\r\n        style={{ marginBottom: 15 }}\r\n        value={0}\r\n        aria-label=\"basic tabs example\"\r\n      >\r\n        <Tab label=\"New\" value={1} />\r\n        <Tab label=\"Popular\" value={2} />\r\n      </Tabs>\r\n\r\n      <Grid container spacing={4}>\r\n        <TabPanel value=\"1\">\r\n          <Grid xs={8} item>\r\n            {(isPostsLoading ? [...Array(5)] : posts.items).map((item) =>\r\n              isPostsLoading ? (\r\n                <Post isLoading={isPostsLoading} />\r\n              ) : (\r\n                <Post\r\n                  id={item._id}\r\n                  title={item.title}\r\n                  imageUrl={\r\n                    item.image ? `http://localhost:4420${item.image}` : \"\"\r\n                  }\r\n                  user={item.user}\r\n                  createdAt={dateConverter(item.createdAt)}\r\n                  viewsCount={item.views}\r\n                  commentsCount={3}\r\n                  tags={item.tags}\r\n                  //comparing post-userId and userId-from-store\r\n                  isEditable={Boolean(item.user._id === userData?._id)}\r\n                />\r\n              )\r\n            )}\r\n          </Grid>\r\n        </TabPanel>\r\n        <TabPanel value=\"2\">\r\n          {(isPostsLoading ? [...Array(5)] : popular).map((item) =>\r\n            isPostsLoading ? (\r\n              <Post isLoading={isPostsLoading} />\r\n            ) : (\r\n              <Post\r\n                id={item._id}\r\n                title={item.title}\r\n                imageUrl={\r\n                  item.image ? `http://localhost:4420${item.image}` : \"\"\r\n                }\r\n                user={item.user}\r\n                createdAt={dateConverter(item.createdAt)}\r\n                viewsCount={item.views}\r\n                commentsCount={3}\r\n                tags={item.tags}\r\n                //comparing post-userId and userId-from-store\r\n                isEditable={Boolean(item.user._id === userData?._id)}\r\n              />\r\n            )\r\n          )}\r\n        </TabPanel>\r\n\r\n        <Grid xs={4} item>\r\n          <TagsBlock items={tags.items} isLoading={isTagsLoading} />\r\n          <CommentsBlock\r\n            items={[\r\n              {\r\n                user: {\r\n                  fullName: \"Вася Пупкин\",\r\n                  avatarUrl: \"https://mui.com/static/images/avatar/1.jpg\",\r\n                },\r\n                text: \"Это тестовый комментарий\",\r\n              },\r\n              {\r\n                user: {\r\n                  fullName: \"Иван Иванов\",\r\n                  avatarUrl: \"https://mui.com/static/images/avatar/2.jpg\",\r\n                },\r\n                text: \"When displaying three lines or more, the avatar is not aligned at the top. You should set the prop to align the avatar at the top\",\r\n              },\r\n            ]}\r\n            isLoading={false}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}