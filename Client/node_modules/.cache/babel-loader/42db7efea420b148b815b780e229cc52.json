{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _privateTheming = require(\"@mui/private-theming\");\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\n\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n      t = new WeakMap();\n  return (_getRequireWildcardCache = function (e) {\n    return e ? t : r;\n  })(e);\n}\n\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n    default: e\n  };\n\n  var t = _getRequireWildcardCache(r);\n\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n    __proto__: null\n  },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n\n  return n.default = e, t && t.set(e, n), n;\n}\n\nconst DISABLE_CSS_TRANSITION = exports.DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\n\nfunction createCssVarsProvider(options) {\n  const {\n    themeId,\n\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider(_ref2) {\n    let {\n      children,\n      theme: themeProp = defaultTheme,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = designSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root',\n      disableNestedContext = false,\n      disableStyleSheetGeneration = false\n    } = _ref2;\n    const hasMounted = React.useRef(false);\n    const upperTheme = (0, _privateTheming.useTheme)();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n\n    const _ref = scopedTheme || themeProp,\n          {\n      colorSchemes = {},\n      components = {},\n      generateCssVars = () => ({\n        vars: {},\n        css: {}\n      }),\n      cssVarPrefix\n    } = _ref,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark; // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      } // This scope occurs on the server\n\n\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n\n      return defaultMode;\n    })();\n\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'system'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })(); // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n\n\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = generateCssVars(); // 3. Start composing the theme object\n\n    const theme = (0, _extends2.default)({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    }); // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(_ref3 => {\n      let [key, scheme] = _ref3;\n      const {\n        css,\n        vars\n      } = generateCssVars(key);\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = (0, _extends2.default)({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    theme.vars = (0, _utils.deepmerge)(theme.vars, rootVars); // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]); // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      mode,\n      systemMode,\n      setMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme,\n      allColorSchemes\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n\n    const element = /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n\n    if (nested) {\n      return element;\n    }\n\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: _propTypes.default.bool,\n\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: _propTypes.default.bool,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: _propTypes.default.any,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DISABLE_CSS_TRANSITION","default","createCssVarsProvider","_extends2","_objectWithoutPropertiesLoose2","_utils","React","_interopRequireWildcard","_propTypes","_styledEngine","_privateTheming","_ThemeProvider","_getInitColorSchemeScript","_useCurrentColorScheme","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","options","themeId","theme","defaultTheme","attribute","defaultAttribute","DEFAULT_ATTRIBUTE","modeStorageKey","defaultModeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","defaultColorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","defaultMode","designSystemMode","defaultColorScheme","designSystemColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","resolveTheme","excludeVariablesFromRoot","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","useContext","Error","process","env","NODE_ENV","formatMuiErrorMessage","CssVarsProvider","children","themeProp","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","disableNestedContext","disableStyleSheetGeneration","hasMounted","useRef","upperTheme","useTheme","ctx","nested","scopedTheme","_ref","components","generateCssVars","vars","css","cssVarPrefix","restThemeProp","allColorSchemes","keys","defaultLightColorScheme","defaultDarkColorScheme","mode","stateMode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","stateColorScheme","setColorScheme","supportedColorSchemes","calculatedMode","calculatedColorScheme","rootCss","rootVars","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","entries","forEach","key","scheme","deepmerge","schemeKey","palette","resolvedDefaultColorScheme","excludedVariables","cssVar","useEffect","setAttribute","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","useMemo","shouldGenerateStyleSheet","element","jsxs","Fragment","jsx","GlobalStyles","styles","Provider","propTypes","string","node","any","oneOfType","object","bool","getInitColorSchemeScript","params"],"sources":["D:/AREACTPROJECTS@IMPORTANT/Frozen/MERL(NewSite)/Client/node_modules/@mui/system/cssVars/createCssVarsProvider.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _styledEngine = require(\"@mui/styled-engine\");\nvar _privateTheming = require(\"@mui/private-theming\");\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"colorSchemes\", \"components\", \"generateCssVars\", \"cssVarPrefix\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nconst DISABLE_CSS_TRANSITION = exports.DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nfunction createCssVarsProvider(options) {\n  const {\n    themeId,\n    /**\n     * This `theme` object needs to follow a certain structure to\n     * be used correctly by the finel `CssVarsProvider`. It should have a\n     * `colorSchemes` key with the light and dark (and any other) palette.\n     * It should also ideally have a vars object created using `prepareCssVars`.\n     */\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n    return value;\n  };\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    modeStorageKey = defaultModeStorageKey,\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\n    attribute = defaultAttribute,\n    defaultMode = designSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root',\n    disableNestedContext = false,\n    disableStyleSheetGeneration = false\n  }) {\n    const hasMounted = React.useRef(false);\n    const upperTheme = (0, _privateTheming.useTheme)();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const scopedTheme = themeProp[themeId];\n    const _ref = scopedTheme || themeProp,\n      {\n        colorSchemes = {},\n        components = {},\n        generateCssVars = () => ({\n          vars: {},\n          css: {}\n        }),\n        cssVarPrefix\n      } = _ref,\n      restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (mode) {\n        return mode;\n      }\n      // This scope occurs on the server\n      if (defaultMode === 'system') {\n        return designSystemMode;\n      }\n      return defaultMode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = generateCssVars();\n\n    // 3. Start composing the theme object\n    const theme = (0, _extends2.default)({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = generateCssVars(key);\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = (0, _extends2.default)({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      })();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    theme.vars = (0, _utils.deepmerge)(theme.vars, rootVars);\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      mode,\n      systemMode,\n      setMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme,\n      allColorSchemes\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        themeId: scopedTheme ? themeId : undefined,\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: _propTypes.default.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: _propTypes.default.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes.\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n    /**\n     * The document to attach the attribute to.\n     */\n    documentNode: _propTypes.default.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n    /**\n     * The window that attaches the 'storage' event listener.\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}