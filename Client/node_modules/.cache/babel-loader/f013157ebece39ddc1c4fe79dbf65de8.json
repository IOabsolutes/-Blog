{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from '../../axios.js'; // make request to server for getting a posts \n\nexport const fetchPosts = createAsyncThunk('posts/fetch', async () => {\n  const {\n    data\n  } = await axios.get('/posts');\n  return data;\n});\nexport const fetchTags = createAsyncThunk('tags/fetch', async () => {\n  const {\n    data\n  } = await axios.get('/tags');\n  return data;\n});\nconst initialState = {\n  posts: {\n    items: [],\n    status: 'loading'\n  },\n  tags: {\n    items: [],\n    status: 'loading'\n  }\n};\nconst postSlice = createSlice({\n  name: 'postSlice',\n  initialState,\n  reducers: {},\n  //describe a state asyncthunk\n  extraReducers: {\n    [fetchPosts.pending]: state => {\n      state.posts.items = [];\n      state.posts.status = 'loading';\n    },\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.posts.items = action.payload;\n      state.posts.status = 'success';\n    },\n    [fetchPosts.rejected]: state => {\n      state.posts.status = 'error';\n    },\n    [fetchGetTags.pending]: state => {\n      state.tags.items = [];\n      state.tags.status = 'loading';\n    },\n    [fetchGetTags.fulfilled]: (state, action) => {\n      state.tags.items = action.payload;\n      state.tags.status = 'success';\n    },\n    [fetchGetTags.rejected]: state => {\n      state.tags.status = 'error';\n    }\n  }\n});\nconst postReducer = postSlice.reducer;\nexport default postReducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchPosts","data","get","fetchTags","initialState","posts","items","status","tags","postSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","fetchGetTags","postReducer","reducer"],"sources":["D:/AREACTPROJECTS@IMPORTANT/Frozen/MERL(NewSite)/Client/src/redux/Slices/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from '../../axios.js'\r\n// make request to server for getting a posts \r\nexport const fetchPosts = createAsyncThunk('posts/fetch', async () => {\r\n    const { data } = await axios.get('/posts')\r\n    return data\r\n})\r\nexport const fetchTags = createAsyncThunk('tags/fetch', async () => {\r\n    const { data } = await axios.get('/tags')\r\n    return data\r\n})\r\n\r\nconst initialState = {\r\n    posts: {\r\n        items: [],\r\n        status: 'loading'\r\n    },\r\n    tags: {\r\n        items: [],\r\n        status: 'loading'\r\n    }\r\n}\r\n\r\nconst postSlice = createSlice({\r\n    name: 'postSlice',\r\n    initialState,\r\n    reducers: {},\r\n    //describe a state asyncthunk\r\n    extraReducers: {\r\n        [fetchPosts.pending]: (state) => {\r\n            state.posts.items = []\r\n            state.posts.status = 'loading'\r\n        },\r\n        [fetchPosts.fulfilled]: (state, action) => {\r\n            state.posts.items = action.payload\r\n            state.posts.status = 'success'\r\n        },\r\n        [fetchPosts.rejected]: (state) => {\r\n            state.posts.status = 'error'\r\n        },\r\n        [fetchGetTags.pending]: (state) => {\r\n            state.tags.items = []\r\n            state.tags.status = 'loading'\r\n        },\r\n        [fetchGetTags.fulfilled]: (state, action) => {\r\n            state.tags.items = action.payload\r\n            state.tags.status = 'success'\r\n        },\r\n        [fetchGetTags.rejected]: (state) => {\r\n            state.tags.status = 'error'\r\n        }\r\n    }\r\n})\r\n\r\nconst postReducer = postSlice.reducer\r\nexport default postReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,aAAD,EAAgB,YAAY;EAClE,MAAM;IAAEG;EAAF,IAAW,MAAMF,KAAK,CAACG,GAAN,CAAU,QAAV,CAAvB;EACA,OAAOD,IAAP;AACH,CAHyC,CAAnC;AAIP,OAAO,MAAME,SAAS,GAAGL,gBAAgB,CAAC,YAAD,EAAe,YAAY;EAChE,MAAM;IAAEG;EAAF,IAAW,MAAMF,KAAK,CAACG,GAAN,CAAU,OAAV,CAAvB;EACA,OAAOD,IAAP;AACH,CAHwC,CAAlC;AAKP,MAAMG,YAAY,GAAG;EACjBC,KAAK,EAAE;IACHC,KAAK,EAAE,EADJ;IAEHC,MAAM,EAAE;EAFL,CADU;EAKjBC,IAAI,EAAE;IACFF,KAAK,EAAE,EADL;IAEFC,MAAM,EAAE;EAFN;AALW,CAArB;AAWA,MAAME,SAAS,GAAGZ,WAAW,CAAC;EAC1Ba,IAAI,EAAE,WADoB;EAE1BN,YAF0B;EAG1BO,QAAQ,EAAE,EAHgB;EAI1B;EACAC,aAAa,EAAE;IACX,CAACZ,UAAU,CAACa,OAAZ,GAAuBC,KAAD,IAAW;MAC7BA,KAAK,CAACT,KAAN,CAAYC,KAAZ,GAAoB,EAApB;MACAQ,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,SAArB;IACH,CAJU;IAKX,CAACP,UAAU,CAACe,SAAZ,GAAwB,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACvCF,KAAK,CAACT,KAAN,CAAYC,KAAZ,GAAoBU,MAAM,CAACC,OAA3B;MACAH,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,SAArB;IACH,CARU;IASX,CAACP,UAAU,CAACkB,QAAZ,GAAwBJ,KAAD,IAAW;MAC9BA,KAAK,CAACT,KAAN,CAAYE,MAAZ,GAAqB,OAArB;IACH,CAXU;IAYX,CAACY,YAAY,CAACN,OAAd,GAAyBC,KAAD,IAAW;MAC/BA,KAAK,CAACN,IAAN,CAAWF,KAAX,GAAmB,EAAnB;MACAQ,KAAK,CAACN,IAAN,CAAWD,MAAX,GAAoB,SAApB;IACH,CAfU;IAgBX,CAACY,YAAY,CAACJ,SAAd,GAA0B,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACzCF,KAAK,CAACN,IAAN,CAAWF,KAAX,GAAmBU,MAAM,CAACC,OAA1B;MACAH,KAAK,CAACN,IAAN,CAAWD,MAAX,GAAoB,SAApB;IACH,CAnBU;IAoBX,CAACY,YAAY,CAACD,QAAd,GAA0BJ,KAAD,IAAW;MAChCA,KAAK,CAACN,IAAN,CAAWD,MAAX,GAAoB,OAApB;IACH;EAtBU;AALW,CAAD,CAA7B;AA+BA,MAAMa,WAAW,GAAGX,SAAS,CAACY,OAA9B;AACA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}