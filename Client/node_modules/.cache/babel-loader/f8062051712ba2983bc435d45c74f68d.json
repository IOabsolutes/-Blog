{"ast":null,"code":"var _jsxFileName = \"D:\\\\AREACTPROJECTS@IMPORTANT\\\\Frozen\\\\MERL(NewSite)\\\\Client\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Grid from \"@mui/material/Grid\";\nimport { Post } from \"../components/Post\";\nimport { TagsBlock } from \"../components/TagsBlock\";\nimport { CommentsBlock } from \"../components/CommentsBlock\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\nimport dateConverter from \"../utils/dateConverter\";\nimport { fetchGetComments } from \"../redux/slice/commentSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useState(0);\n  const {\n    allComments\n  } = useSelector(state => state.com);\n  console.log(allComments.items); //pull out posts and tags from postReducer\n\n  const {\n    posts,\n    tags\n  } = useSelector(state => state.post); //pulling out the status for checking if posts are loaded\n\n  const isPostsLoading = posts.status === \"loading\";\n  const isTagsLoading = tags.status === \"loading\";\n  const userData = useSelector(state => state.auth.data);\n  const {\n    postComments\n  } = useSelector(state => state.com);\n  React.useEffect(() => {\n    try {\n      //calling two requests for getting a posts and tags\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\n      dispatch(fetchPosts());\n      dispatch(fetchTags());\n      dispatch(fetchGetComments());\n    } catch (error) {\n      console.log(\"failure to get posts\", error);\n    }\n  }, []); //\n\n  const popular = Array.isArray(posts === null || posts === void 0 ? void 0 : posts.items) // Check if posts.items is an array\n  ? [...posts.items].sort(function (a, b) {\n    // If it is, create a copy of the array and sort it\n    if (a.views > b.views) return -1; // Compare the views count of two posts\n\n    return 0; // If the views count is the same, maintain the order\n  }) : []; // If posts.items is not an array, set popular as an empty array\n\n  const handleChangeTabs = (e, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  function TabNew() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 8,\n      item: true,\n      children: (isPostsLoading ? [...Array(5)] : posts.items).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n        isLoading: isPostsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Post, {\n        id: item._id,\n        title: item.title,\n        imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n        user: item.user,\n        createdAt: dateConverter(item.createdAt),\n        viewsCount: item.views,\n        commentsCount: postComments.items.length,\n        tags: item.tags //comparing post-userId and userId-from-store\n        ,\n        isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  function TabPopular() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 8,\n      item: true,\n      children: (isPostsLoading ? [...Array(5)] : popular).map(item => isPostsLoading ? /*#__PURE__*/_jsxDEV(Post, {\n        isLoading: isPostsLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Post, {\n        id: item._id,\n        title: item.title,\n        imageUrl: item.image ? `http://localhost:4420${item.image}` : \"\",\n        user: item.user,\n        createdAt: dateConverter(item.createdAt),\n        viewsCount: item.views,\n        commentsCount: 3,\n        tags: item.tags //comparing post-userId and userId-from-store\n        ,\n        isEditable: Boolean(item.user._id === (userData === null || userData === void 0 ? void 0 : userData._id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: handleChangeTabs,\n      style: {\n        marginBottom: 15\n      },\n      \"aria-label\": \"basic tabs example\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"New\",\n        value: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Popular\",\n        value: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [activeTab === 0 ? /*#__PURE__*/_jsxDEV(TabNew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(TabPopular, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 4,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(TagsBlock, {\n          items: tags.items,\n          isLoading: isTagsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentsBlock, {\n          items: allComments.items.slice(0, 5),\n          isLoading: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"J445nC2N0czPgVyZMNN++zSM3cM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Tabs","Tab","Grid","Post","TagsBlock","CommentsBlock","useDispatch","useSelector","fetchPosts","fetchTags","dateConverter","fetchGetComments","Home","dispatch","activeTab","setActiveTab","allComments","state","com","console","log","items","posts","tags","post","isPostsLoading","status","isTagsLoading","userData","auth","data","postComments","useEffect","error","popular","Array","isArray","sort","a","b","views","handleChangeTabs","e","newValue","TabNew","map","item","_id","title","image","user","createdAt","length","Boolean","TabPopular","marginBottom","slice"],"sources":["D:/AREACTPROJECTS@IMPORTANT/Frozen/MERL(NewSite)/Client/src/pages/Home.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { Post } from \"../components/Post\";\r\nimport { TagsBlock } from \"../components/TagsBlock\";\r\nimport { CommentsBlock } from \"../components/CommentsBlock\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPosts, fetchTags } from \"../redux/slice/postSlice\";\r\nimport dateConverter from \"../utils/dateConverter\";\r\nimport { fetchGetComments } from \"../redux/slice/commentSlice\";\r\nexport const Home = () => {\r\n  const dispatch = useDispatch();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const { allComments } = useSelector((state) => state.com);\r\n  console.log(allComments.items);\r\n  //pull out posts and tags from postReducer\r\n  const { posts, tags } = useSelector((state) => state.post);\r\n  //pulling out the status for checking if posts are loaded\r\n  const isPostsLoading = posts.status === \"loading\";\r\n  const isTagsLoading = tags.status === \"loading\";\r\n\r\n  const userData = useSelector((state) => state.auth.data);\r\n  const { postComments } = useSelector((state) => state.com);\r\n\r\n  React.useEffect(() => {\r\n    try {\r\n      //calling two requests for getting a posts and tags\r\n      //if you just write the fetchPosts it won`t work cause you need fuction to be called for of make the request\r\n      dispatch(fetchPosts());\r\n      dispatch(fetchTags());\r\n      dispatch(fetchGetComments());\r\n    } catch (error) {\r\n      console.log(\"failure to get posts\", error);\r\n    }\r\n  }, []);\r\n  //\r\n  const popular = Array.isArray(posts?.items) // Check if posts.items is an array\r\n    ? [...posts.items].sort(function (a, b) {\r\n        // If it is, create a copy of the array and sort it\r\n        if (a.views > b.views) return -1; // Compare the views count of two posts\r\n        return 0; // If the views count is the same, maintain the order\r\n      })\r\n    : []; // If posts.items is not an array, set popular as an empty array\r\n  const handleChangeTabs = (e, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n  function TabNew() {\r\n    return (\r\n      <Grid xs={8} item>\r\n        {(isPostsLoading ? [...Array(5)] : posts.items).map((item) =>\r\n          isPostsLoading ? (\r\n            <Post isLoading={isPostsLoading} />\r\n          ) : (\r\n            <Post\r\n              id={item._id}\r\n              title={item.title}\r\n              imageUrl={item.image ? `http://localhost:4420${item.image}` : \"\"}\r\n              user={item.user}\r\n              createdAt={dateConverter(item.createdAt)}\r\n              viewsCount={item.views}\r\n              commentsCount={postComments.items.length}\r\n              tags={item.tags}\r\n              //comparing post-userId and userId-from-store\r\n              isEditable={Boolean(item.user._id === userData?._id)}\r\n            />\r\n          )\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n  function TabPopular() {\r\n    return (\r\n      <Grid xs={8} item>\r\n        {(isPostsLoading ? [...Array(5)] : popular).map((item) =>\r\n          isPostsLoading ? (\r\n            <Post isLoading={isPostsLoading} />\r\n          ) : (\r\n            <Post\r\n              id={item._id}\r\n              title={item.title}\r\n              imageUrl={item.image ? `http://localhost:4420${item.image}` : \"\"}\r\n              user={item.user}\r\n              createdAt={dateConverter(item.createdAt)}\r\n              viewsCount={item.views}\r\n              commentsCount={3}\r\n              tags={item.tags}\r\n              //comparing post-userId and userId-from-store\r\n              isEditable={Boolean(item.user._id === userData?._id)}\r\n            />\r\n          )\r\n        )}\r\n      </Grid>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Tabs\r\n        value={activeTab}\r\n        onChange={handleChangeTabs}\r\n        style={{ marginBottom: 15 }}\r\n        aria-label=\"basic tabs example\"\r\n      >\r\n        <Tab label=\"New\" value={0} />\r\n        <Tab label=\"Popular\" value={1} />\r\n      </Tabs>\r\n\r\n      <Grid container spacing={4}>\r\n        {activeTab === 0 ? <TabNew /> : <TabPopular />}\r\n        <Grid xs={4} item>\r\n          <TagsBlock items={tags.items} isLoading={isTagsLoading} />\r\n          <CommentsBlock\r\n            items={allComments.items.slice(0, 5)}\r\n            isLoading={false}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}